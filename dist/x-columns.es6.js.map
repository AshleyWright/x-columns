{"version":3,"file":"x-columns.es6.js","sources":["../src/parseCSSUnit.ts","../src/utils.ts","../src/main.ts"],"sourcesContent":["export type CSSUnit = \"Hz\" | \"Q\" | \"ch\" | \"cm\" | \"deg\" | \"dpcm\" | \"dpi\" | \"dppx\" | \"em\" | \"ex\" | \"fr\" | \"grad\" | \"in\" | \"kHz\" | \"mm\" | \"ms\" | \"number\" | \"pc\" | \"percent\" | \"pt\" | \"px\" | \"rad\" | \"rem\" | \"s\" | \"turn\" | \"vh\" | \"vmax\" | \"vmin\" | \"vw\";\n\nexport interface CSSUnitValue {\n  value: number;\n  unit: CSSUnit;\n}\n/**\n * Parses a string of a css unit value into an object with\n * properties `value` and `unit`.\n *\n * @export\n * @param {string} str\n * @returns {CSSUnitValue}\n * @throws Error when encountering an unrecognised css value\n */\nexport function parseCSSUnit(str: { toString(): string }): CSSUnitValue {\n  const result = /^([+-]?\\d*.?\\d*)\\s*(%|Hz|Q|ch|cm|deg|dpcm|dpi|dppx|em|ex|fr|grad|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vw|)$/\n    .exec(str.toString());\n  if (result) {\n    switch (result[2]) {\n      case \"%\":\n        result[2] = \"percent\";\n        break;\n      case \"\":\n        result[2] = \"number\";\n        break;\n    }\n    return { value: parseFloat(result[1]), unit: result[2] as CSSUnit };\n  }\n  throw new Error(`Unrecognised CSS Value: ${str}`);\n}\n","/**\n * Wraps a function, `callback` so that it cannot be called\n * more frequently than once every {limit}ms.\n *\n * @export\n * @param {Function} callback\n * @param {number} limit\n * @returns\n */\nexport function throttle(callback : Function, limit : number) {\n  var wait = false;\n  return function () {\n    if (!wait) {\n      callback.apply(null, arguments);\n      wait = true;\n      setTimeout(function () {\n        wait = false;\n      }, limit);\n    }\n  }\n}\n\nexport const css = String.raw;","import { parseCSSUnit, CSSUnitValue } from \"./parseCSSUnit\";\nimport { css, throttle } from \"./utils\";\n\nconst xColumned = new WeakSet<Element>();\n\n/**\n * Sets an element that has a `column-width` property and a\n * constrained `height` to have a width allowing for\n * sufficient columns for elements content.\n * \n * When the elements `writing-mode` is vertical, sets the\n * height under a constrained `width`.\n *\n * @export\n * @param {Element} element\n * @returns {boolean} false if called on an element without\n *                    columns.\n */\nexport function xColumns(element: Element): boolean {\n  if (!(element instanceof HTMLElement)) return false;\n  const styleMap = getComputedStyle(element);\n  let columnWidth: CSSUnitValue;\n  try {\n    columnWidth = parseCSSUnit(styleMap.getPropertyValue(\"column-width\"));\n  } catch (e) {\n    console.warn(\n      `[x-columns] Element ${element} does not have a column layout.`\n    );\n    return false;\n  }\n\n  const sizeMarker = document.createElement(\"span\");\n  element.appendChild(sizeMarker);\n  const columnGap = parseCSSUnit(styleMap.getPropertyValue(\"column-gap\"));\n  const px2remRatio =\n    1 /\n    parseCSSUnit(\n      getComputedStyle(document.documentElement).getPropertyValue(\"font-size\")\n    ).value;\n  const columnSize = columnWidth.value + columnGap.value;\n  const writingMode = styleMap.getPropertyValue(\"writing-mode\");\n\n  if (~[\"tb\", \"tb-rl\", \"vertical-rl\", \"vertical-lr\"].indexOf(writingMode)) {\n    // Invert resizing in case of vertical writing mode.\n    element.style.height = \"max-content\";\n    const sizeMarkerPos =\n      sizeMarker.getBoundingClientRect().top -\n      element.getBoundingClientRect().top;\n    const elementHeight =\n      Math.floor(sizeMarkerPos / columnSize + 1) * columnSize;\n    element.style.height = `${elementHeight * px2remRatio}rem`;\n  } else {\n    element.style.width = \"max-content\";\n    const sizeMarkerPos =\n      sizeMarker.getBoundingClientRect().left -\n      element.getBoundingClientRect().left;\n    const elementWidth =\n      Math.floor(sizeMarkerPos / columnSize + 1) * columnSize;\n    element.style.width = `${elementWidth * px2remRatio}rem`;\n  }\n  xColumned.add(element);\n\n  element.removeChild(sizeMarker);\n  return true;\n}\n\n/**\n * Sets all elements with css custom property `--x-columns`\n * equal to `auto` to be resized by x-columns.\n * \n * Removes x-column sizing is `--x-columns` has been set to\n * `none`.\n *\n * @export\n */\nexport function xColumnsAll() {\n  Array.from(document.querySelectorAll(\"*\"))\n    .forEach(el => {\n      if (!(el instanceof HTMLElement)) return false;\n      const styleMap = getComputedStyle(el);\n      if (/^\\s*auto\\s*$/.test(styleMap.getPropertyValue(\"--x-columns\"))) return xColumns(el);\n      if (xColumned.has(el)) {\n        const writingMode = styleMap.getPropertyValue(\"writing-mode\");\n        if (~[\"tb\", \"tb-rl\", \"vertical-rl\", \"vertical-lr\"].indexOf(writingMode))\n          el.style.removeProperty(\"height\");\n        else\n          el.style.removeProperty(\"width\");\n      }\n    });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  if (CSS && (CSS as any).registerProperty) {\n    (CSS as any).registerProperty({\n      name: \"--x-columns\",\n      syntax: \"auto | none\",\n      initialValue: \"none\",\n      inherits: false\n    });\n  } else {\n    const style = document.createElement(\"style\");\n    style.textContent = css\n      `*, *::before, *::after {\n        --x-columns: none;\n      }`;\n    document.head.appendChild(style);\n  }\n  window.addEventListener(\"resize\", throttle(xColumnsAll, 100));\n  xColumnsAll();\n});"],"names":[],"mappings":"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"}